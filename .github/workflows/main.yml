name: Test and Release
on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
jobs:
  generate:
    name: Generate
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Setup go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run go generate
        run: go generate ./...
      - name: Check if there are any changes
        run: |
          if [ "$(git diff | wc -l)" -ne 0 ]; then
            echo "Please run go generate ./... to update the generated code."
          fi
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Setup go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Install KinD
        run: |
          set -euo pipefail
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.29.0/kind-linux-amd64
          CHECKSUM="$(sha256sum kind)"
          if [ "${CHECKSUM}" != "c72eda46430f065fb45c5f70e7c957cc9209402ef309294821978677c8fb3284  kind" ]; then
            echo "Invalid checksum: ${CHECKSUM}"
            exit 1
          fi
          chmod +x ./kind
          sudo mv kind /usr/local/bin
      - name: Set up KinD cluster
        run: |
          kind create cluster --wait 300s
      - name: Import manifests
        run: |
          set -euo pipefail
          for MANIFEST in backend/kubernetes/manifests/*.yml; do
            kubectl apply -f "${MANIFEST}"
          done
      - name: Run tests
        run: |
          go test ./...
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: Setup go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Lint
        run: go tool github.com/golangci/golangci-lint/v2/cmd/golangci-lint run
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - generate
      - lint
      - test
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Docker login
        run: |
          echo "${GITHUB_TOKEN}" | docker login ghcr.io --username "${DOCKER_USER}" --password-stdin
        env:
          DOCKER_USER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run GoReleaser
        run: |
          go tool github.com/goreleaser/goreleaser/v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  testrelease:
    name: Release test
    runs-on: ubuntu-latest
    needs:
      - generate
      - lint
      - test
    if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 #v5.5.0
        with:
          go-version-file: go.mod
          cache-dependency-path: go.sum
      - name: Run GoReleaser
        run: |
          go tool github.com/goreleaser/goreleaser/v2 --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}